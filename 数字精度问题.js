// 0.1 + 0.2 不等于 0.3
/**
 * 计算机内部使用二进制存储数据，两个数字进行数学运算，
 * 首先是将这两个数字以二进制形式存储在计算机内，
 * 然后计算机在内部使用两个二进制数进行计算，
 * 最后将计算结果的二进制数转为十进制展示出来
 *
 *
 * 由于十进制小数在转二进制的时候，规则是小数部分乘2，判断是否得到一个整数，如果得到整数，转换完成，如果没有得到整数，则继续乘2。
 * 所以，0.1和0.2在转二进制的时候，其实是一个死循环
 * 但计算机在对于内部死循环的数据会根据一个标准保留52位，
 * 也就是说，在计算机内存储0.1和0.2时本来就不精准，
 * 两个不精准的小数在计算后得到的结果与准确结果也是有误差的
 */

// 解决方案
/**
 * 1. 将小数乘10的倍数，转为整数，然后在计算，计算完成后再缩小10倍
 * 例如
 *  var result = ((0.1 *10) + (0.2*10)) / 10
 *
 * 2. 使用数字的 toFixed 方法强制保留小数点后多少位
 * var result = Number((0.1 + 0.2).toFixed(2))
 * toFixed 返回值是字符串类型，注意转为Number类型
 * 
 * 3. 自定义数字的运算方法，当需要进行数学运算的时候，不直接进行，调用自定义的方法进行
 */
