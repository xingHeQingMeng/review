// 作用域
/**
 * 作用域就是在代码执行过程中，形成一个独立的空间，让空间内的变量不会泄露在空间外，
 * 也让独立空间内的变量函数在独立空间内运行，而不会影响到外部环境
 * 
 * 作用域分为全局作用域和局部作用域，也就是本来有一个巨大的空间，
 * 空间内定义的函数内部，就形成了一个独立的小空间。
 * 全局作用域是最大的作用域
 */

// 作用域链
/**
 * 当独立空间内的数据不能满足需求时，是可以从外部获取数据的，
 * 也就是说这样的独立空间之间是可以有层级关系的，
 * 外部的空间不可以从内部空间获取数据，但内部空间可从外部空间获取。
 * 当子级空间在父级空间中获取数据时，父级空间没有的话，就通过父级作用域查找他的父级作用域
 * 知道找到最大的作用域，全局作用域，如果全局也没有，就报错
 * 
 * 当一个变量当作数据容器储存，也就是给变量赋值的时候，也要现在自己作用域查找变量的定义，如果没有就再向上查找
 * 直到全局，如果全局也没有，就在全局声明，并进行赋值
 */