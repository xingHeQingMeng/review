// 同源策略

/**
 * 同源策略，又称 SOP，全程 Same Origin Policy，
 * 是浏览器最基本的安全功能。
 * 指的是浏览器限制当前网页只能访问同源的接口资源。
 * 所谓同源，值当前页面和请求的接口，
 * 双方必须时相同协议，相同域名，相同端口。
 * 只要有一个不相同，则会受到浏览器的约束，不允许请求
 *
 *
 * 同源策略的目的：
 * 在浏览器看网页，如果网络上的接口可以不受限制、无需授权随意被人调用，那将是一个非常混乱的场景。
 * 浏览器为了安全有序，内部实现了同源策略。
 *
 * 跨域：
 *  当一个项目变得很大的时候，将所有内容放在一个网站或一个服务器中会让网站变得臃肿且性能低下，
 *  所以，在一些场景中，我们需要跨国同源策略，请求到不同的接口资源，这种场景叫做跨域
 */

// 跨域

/**
 * 跨域大致有三种方案 jsonp cors proxy
 * 1. jsonp
 *  这种方式时利用浏览器不限制某些标签发送跨域请求，如 link, img, iframe, script
 *  通常请求回来的资源是要在js中进行处理，所以jsonp跨域是利用 script 标签进行发送，
 *  且这种请求方式只能是 get 请求
 *
 * 2. cors
 *  这种方式时让接口资源方面进行授权，授权允许访问。
 *  在接口资源处添加响应头即可通过浏览器的同源策略，
 *  {Access-Controal-Allow-Origin:'*'}
 * 
 * 3. proxy
 *  这种方式属于找外援的方式，这中方式属于找外援的一种凡是，
 *  浏览器只能限制当前正在打开的web页面发送请求，但无法限制服务器端请求资源接口
 *  所以，我们可以将请求发送到自己的服务器，然后自己服务器去请求目标接口资源，
 *  最后自己服务器将接口资源返回给当前页面，类似于找个外援代替自己请求目标接口资源。
 *  这种方式通常要对服务器进行配置。
 */
